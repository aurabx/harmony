name: Release Harmony

on:
  push:
    tags:
      - 'v*' # triggers only on version tags (e.g. v1.0.0)

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-binaries:
    name: Build Rust binaries (cross)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build release binary
        run: cross build --release --target ${{ matrix.target }}

      - name: Prepare release artefacts
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/harmony* release/ || true
          cd release
          tar czf harmony-${{ matrix.target }}.tar.gz harmony* || true
          shasum -a 256 harmony-${{ matrix.target }}.tar.gz > harmony-${{ matrix.target }}.sha256

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: harmony-${{ matrix.target }}
          path: release/

  docker:
    name: Build and push multi-arch Docker image
    runs-on: ubuntu-latest
    needs: build-binaries
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    name: Publish GitHub release
    runs-on: ubuntu-latest
    needs: [build-binaries, docker]
    steps:
      - name: Download built artefacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Harmony ${{ github.ref_name }}
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
