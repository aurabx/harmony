# ------------------------
# Basic configuration
#-------------------------
[proxy]
# The name of the proxy, required
id = "harmony-test"
# The log level. Defaults to 'error'
log_level = "debug"
# Directories are resolved relative to this config file's directory
pipelines_path = "pipelines/basic"
transforms_path = "transforms"

# ------------------------------------------------------------------
# Network setup:
# - management -> 127.0.0.1:9090 (management API only, not exposed)
# - external   -> 0.0.0.0:8080 (all client traffic)
# ------------------------------------------------------------------
[network.management]
# Management-only listener – used implicitly by the Management API
enable_wireguard = false
interface = "wg0"

[network.management.http]
bind_address = "127.0.0.1"  # Management connections only
bind_port = 9090            # Management API port

[network.external]
# Public listener – used by all user-facing pipelines
enable_wireguard = false
interface = "wg0"

[network.external.http]
bind_address = "0.0.0.0"   # Listen on all interfaces
bind_port = 8080           # Client traffic port

# ------------------------
# Management API
# 
# Explicitly specify which network to use for management endpoints
#-------------------------
[management]
enabled = true              # Enable management endpoints
base_path = "admin"         # Base path for management endpoints
network = "management"      # Use the management network

# ------------------------
# Logging
#-------------------------
[logging]
log_to_file = true
log_file_path = "./tmp/harmony_test.log"

# ------------------------
# Storage
#
# Configurable storage backend for temporary files
#-------------------------
[storage]
backend = "filesystem"

[storage.options]
path = "./tmp"

# ------------------------
# Service types
#-------------------------
[services.http]
module=""

[services.fhir]
module=""

[services.dicom]
module=""

[services.mock_dicom]
module=""

[services.echo]
module=""

[services.jmix]
module=""

[services.dicomweb]
module=""

# ------------------------
# Available middleware
#-------------------------
[middleware_types.jwtauth]
module=""

[middleware_types.basic_auth]
module=""

[middleware_types.connect]
module=""

[middleware_types.json_extractor]
module=""

[middleware_types.passthru]
module=""

[middleware_types.transform]
module=""

[middleware_types.path_filter]
module=""

[middleware_types.metadata_transform]
module=""

# DICOMweb <-> DICOM bridge
[middleware_types.dicomweb_bridge]
module=""


# JMIX builder middleware
[middleware_types.jmix_builder]
module=""

# Aliases
[middleware_types.json]
module=""

[middleware_types.dicomweb]
module=""
