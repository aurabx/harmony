# ------------------------
# Basic configuration
#-------------------------
[proxy]
# The name of the proxy, required
id = "harmony"
# The log level. Defaults to 'error'
log_level = "debug"
# Directories are resolved relative to this config file's directory
pipelines_path = "pipelines"
transforms_path = "transforms"

# ------------------------
# Management API
#-------------------------
[management]
# Whether the management API is enabled. Defaults to false for security.
enabled = true
# The base path for management endpoints. Defaults to "admin".
base_path = "admin"
network ="management"

# ------------------------
# Network
#
# Defines 0 or more network configurations.
#-------------------------
[network.default]
# Whether to enable wireguard connections on this network
enable_wireguard = false
interface = "wg0"

[network.default.http]
bind_address = "0.0.0.0"  # Listen on all interfaces
bind_port = 8080          # Use port 8080

[network.management]
# Management-only listener
enable_wireguard = false
interface = "wg0"

[network.management.http]
bind_address = "127.0.0.1"  # Management connections only
bind_port = 9090            # Management API port

# ------------------------
# Logging
#-------------------------
[logging]
log_to_file = true
log_file_path = "./tmp/harmony_test.log"

# ------------------------
# Storage
#
# Configurable storage backend for temporary files
#-------------------------
[storage]
backend = "filesystem"

[storage.options]
path = "./tmp"

# ------------------------
# Service types
#-------------------------
[services.http]
module=""

[services.fhir]
module=""

[services.dicom]
module=""

[services.echo]
module=""

[services.jmix]
module=""

[services.dicomweb]
module=""

# ------------------------
# Available middleware
#-------------------------
[middleware_types.jwtauth]
module=""

[middleware_types.auth]
module=""

[middleware_types.connect]
module=""

[middleware_types.json_extractor]
module=""

[middleware_types.passthru]
module=""

[middleware_types.transform]
module=""

# DICOMweb <-> DICOM bridge middleware (RECOMMENDED - replaces both middlewares below)
[middleware_types.dicomweb_bridge]
module=""

# JMIX builder middleware
[middleware_types.jmix_builder]
module=""

# Aliases
[middleware_types.json]
module=""

[middleware_types.dicomweb]
module=""
